/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OddworxStaking,
  OddworxStakingInterface,
} from "../OddworxStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "oddworxAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidInput",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAdmin",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwnerOfToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "itemSKU",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "ItemPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
    ],
    name: "StakedNft",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "UnstakedNft",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UserClaimedRewards",
    type: "event",
  },
  {
    inputs: [],
    name: "HOLDING_REWARD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STAKING_REWARD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "admin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "itemSKU",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "contract IERC721",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "nftIds",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "buyItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "changeStaking",
        type: "bool",
      },
    ],
    name: "changeRewardAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "nftIds",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getNftData",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nftData",
    outputs: [
      {
        internalType: "address",
        name: "ownerAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "staked",
        type: "bool",
      },
      {
        internalType: "uint64",
        name: "timestamp",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "legacyStaking",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftHoldRewardsActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    name: "nftInterfaces",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oddworxContract",
    outputs: [
      {
        internalType: "contract IOddworx",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oddworxContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "address_",
        type: "address",
      },
    ],
    name: "setOddworxAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "nftIds",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isStaked",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "newTimestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "usingLegacyStaking",
        type: "bool",
      },
    ],
    name: "setUserNftData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "nftIds",
        type: "uint256[]",
      },
    ],
    name: "stakeNfts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "address_",
        type: "address",
      },
    ],
    name: "toggleAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "address_",
        type: "address",
      },
    ],
    name: "toggleNftInterface",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "nftIds",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "unstakeNftEmergency",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "nftIds",
        type: "uint256[]",
      },
    ],
    name: "unstakeNfts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526004805460ff60a01b1916600160a01b1790556801158e460913d00000600555678ac7230489e8000060065534801561003c57600080fd5b50604051611bb4380380611bb483398101604081905261005b916100ae565b6000805460ff199081168255600780546001600160a01b039094166001600160a01b03199485168117909155600480549094161790925533815260016020819052604090912080549092161790556100de565b6000602082840312156100c057600080fd5b81516001600160a01b03811681146100d757600080fd5b9392505050565b611ac7806100ed6000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806387d83bdc116100b8578063d127a98f1161007c578063d127a98f14610355578063d3b861411461036c578063dcfbd0751461037f578063e4aaccab14610388578063f0d5b7db1461039b578063f6b15d8a146103ae57600080fd5b806387d83bdc146102455780639df7d475146102585780639e768ff71461026b578063ba1238a11461027f578063ce55dcaa1461034257600080fd5b8063530389931161010a578063530389931461019d5780635c975abb146101cd57806363a846f8146101e4578063706be11f146102075780638456cb591461021a57806385a972861461022257600080fd5b806309b4084114610147578063249c421a1461015c57806334f0fce01461016f5780633f4ba83a1461018257806349db4ced1461018a575b600080fd5b61015a610155366004611670565b61040a565b005b61015a61016a3660046116b4565b610456565b61015a61017d366004611723565b6104b5565b61015a610617565b61015a6101983660046117b5565b610657565b6007546101b0906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b60005460ff165b60405190151581526020016101c4565b6101d46101f23660046116b4565b60016020526000908152604090205460ff1681565b61015a610215366004611830565b610770565b61015a610a61565b6101d46102303660046116b4565b60026020526000908152604090205460ff1681565b61015a6102533660046116b4565b610a9f565b61015a610266366004611897565b610b01565b6004546101d490600160a01b900460ff1681565b61030861028d3660046118eb565b6001600160a01b039182166000908152600360209081526040808320938352928152908290208251608081018452905493841680825260ff600160a01b8604811615159383018490526001600160401b03600160a81b870416948301859052600160e81b909504909416151560609091018190529293909290565b604080516001600160a01b03909516855292151560208501526001600160401b0390911691830191909152151560608201526080016101c4565b61015a610350366004611917565b610dd0565b61035e60065481565b6040519081526020016101c4565b61015a61037a3660046116b4565b610fd6565b61035e60055481565b61015a610396366004611897565b611035565b6004546101b0906001600160a01b031681565b6103086103bc3660046118eb565b60036020908152600092835260408084209091529082529020546001600160a01b0381169060ff600160a01b82048116916001600160401b03600160a81b82041691600160e81b9091041684565b3360009081526001602081905260409091205460ff1615151461044057604051637bfa4b9f60e01b815260040160405180910390fd5b6001811515146104505750600655565b50600555565b3360009081526001602081905260409091205460ff1615151461048c57604051637bfa4b9f60e01b815260040160405180910390fd5b6001600160a01b03166000908152600260205260409020805460ff19811660ff90911615179055565b3360009081526001602081905260409091205460ff161515146104eb57604051637bfa4b9f60e01b815260040160405180910390fd5b60005b8581101561060d576040518060800160405280866001600160a01b031681526020018515158152602001846001600160401b03168152602001831515815250600360008a6001600160a01b03166001600160a01b03168152602001908152602001600020600089898581811061056657610566611993565b602090810292909201358352508181019290925260409081016000208351815493850151928501516060909501511515600160e81b0260ff60e81b196001600160401b03909616600160a81b029590951668ffffffffffffffffff60a81b19931515600160a01b026001600160a81b03199095166001600160a01b039092169190911793909317919091169190911791909117905580610605816119bf565b9150506104ee565b5050505050505050565b3360009081526001602081905260409091205460ff1615151461064d57604051637bfa4b9f60e01b815260040160405180910390fd5b610655611319565b565b60005460ff16156106835760405162461bcd60e51b815260040161067a906119da565b60405180910390fd5b33600090815260016020819052604082205460ff161515146106a557336106a7565b815b905082156106bb576106bb85858584610770565b60048054604051632770a7eb60e21b81526001600160a01b038481169382019390935260248101899052911690639dc29fac90604401600060405180830381600087803b15801561070b57600080fd5b505af115801561071f573d6000803e3d6000fd5b5050604080518a8152602081018a90526001600160a01b03851693507f1452773cf753d0d7c71ed9990f7c7e2bdde4a2d08d187b3647953877e400488d92500160405180910390a250505050505050565b60005460ff16156107935760405162461bcd60e51b815260040161067a906119da565b6001600160a01b03841660009081526002602052604090205460ff1615806107b9575033155b156107d75760405163b4fa3fb360e01b815260040160405180910390fd5b604080516080810182526000808252602082018190529181018290526060810182905233600090815260016020819052604082205460ff1615151461081c573361081e565b835b905060005b85811015610a4757600087878381811061083f5761083f611993565b6001600160a01b03808d16600090815260036020908152604080832094820296909601358083529381529085902085516080810187529054928316815260ff600160a01b8404811615159282018390526001600160401b03600160a81b85041696820196909652600160e81b90920490941615156060820152965092506109849050576040516331a9108f60e11b8152600481018290526001600160a01b0380851691908b1690636352211e90602401602060405180830381865afa15801561090c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109309190611a04565b6001600160a01b0316146109575760405163130213c560e21b815260040160405180910390fd5b6109738982600654600654600361096e9190611a21565b6113ac565b61097d9086611a40565b94506109f0565b826001600160a01b031684600001516001600160a01b0316146109ba5760405163130213c560e21b815260040160405180910390fd5b6109c9898260055460006113ac565b6109d39086611a40565b9450836060015115156001151514156109f0576109f08982611446565b6001600160a01b038916600090815260036020908152604080832093835292905220805467ffffffffffffffff60a81b1916600160a81b426001600160401b03160217905580610a3f816119bf565b915050610823565b508215610a5857610a588184611500565b50505050505050565b3360009081526001602081905260409091205460ff16151514610a9757604051637bfa4b9f60e01b815260040160405180910390fd5b610655611564565b3360009081526001602081905260409091205460ff16151514610ad557604051637bfa4b9f60e01b815260040160405180910390fd5b600780546001600160a01b039092166001600160a01b0319928316811790915560048054909216179055565b60005460ff1615610b245760405162461bcd60e51b815260040161067a906119da565b604080516080810182526000808252602082018190529181018290526060810182905290805b83811015610db8576000858583818110610b6657610b66611993565b6001600160a01b03808b16600090815260036020908152604080832094820296909601358083529381529085902085516080810187529054928316815260ff600160a01b8404811615159282018390526001600160401b03600160a81b85041696820196909652600160e81b9092049094161515606082015296509250610c0290505760405163b4fa3fb360e01b815260040160405180910390fd5b83516001600160a01b03163314610c2c5760405163130213c560e21b815260040160405180910390fd5b610c3b878260055460006113ac565b610c459084611a40565b92506040518060800160405280336001600160a01b03168152602001600015158152602001426001600160401b031681526020016000151581525060036000896001600160a01b03166001600160a01b03168152602001908152602001600020600083815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160000160146101000a81548160ff02191690831515021790555060408201518160000160156101000a8154816001600160401b0302191690836001600160401b03160217905550606082015181600001601d6101000a81548160ff021916908315150217905550905050610d6387308660000151846115bc565b6040513380825282916001600160a01b038a1691907f0d4dc35be5fe5ad2ab4068e230049233a0db1b0aaff2a555a8998ada4b1e53f69060200160405180910390a45080610db0816119bf565b915050610b4a565b508015610dc957610dc93382611500565b5050505050565b3360009081526001602081905260409091205460ff16151514610e0657604051637bfa4b9f60e01b815260040160405180910390fd5b60005b83811015610fce5733600090815260016020819052604082205460ff16151514610e335733610e35565b835b604080516080810182526001600160a01b038087168252600060208084018290526001600160401b0342168486015260608401829052918c16815260039091529182209293509190888886818110610e8f57610e8f611993565b602090810292909201358352508181019290925260409081016000208351815493850151928501516060909501511515600160e81b0260ff60e81b196001600160401b03909616600160a81b029590951668ffffffffffffffffff60a81b19931515600160a01b026001600160a81b03199095166001600160a01b0390921691909117939093179190911691909117919091179055610f48873085898987818110610f3c57610f3c611993565b905060200201356115bc565b858583818110610f5a57610f5a611993565b90506020020135876001600160a01b0316826001600160a01b03167f0d4dc35be5fe5ad2ab4068e230049233a0db1b0aaff2a555a8998ada4b1e53f686604051610fb391906001600160a01b0391909116815260200190565b60405180910390a45080610fc6816119bf565b915050610e09565b505050505050565b3360009081526001602081905260409091205460ff1615151461100c57604051637bfa4b9f60e01b815260040160405180910390fd5b6001600160a01b03166000908152600160205260409020805460ff19811660ff90911615179055565b60005460ff16156110585760405162461bcd60e51b815260040161067a906119da565b6001600160a01b03831660009081526002602052604090205460ff166110915760405163b4fa3fb360e01b815260040160405180910390fd5b604080516080810182526000808252602082018190529181018290526060810182905260005b838110156113085760008585838181106110d3576110d3611993565b6001600160a01b03808b16600090815260036020908152604080832094820296909601358083529381529085902085516080810187529054928316815260ff600160a01b840481161515928201929092526001600160401b03600160a81b84041695810195909552600160e81b90910416151560608401819052929550925061118090505761116f8782600654600654600361096e9190611a21565b6111799085611a40565b93506111a5565b61118f878260055460006113ac565b6111999085611a40565b93506111a58782611446565b6040518060800160405280336001600160a01b03168152602001600115158152602001426001600160401b031681526020016000151581525060036000896001600160a01b03166001600160a01b03168152602001908152602001600020600083815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160000160146101000a81548160ff02191690831515021790555060408201518160000160156101000a8154816001600160401b0302191690836001600160401b03160217905550606082015181600001601d6101000a81548160ff0219169083151502179055509050506112bd873330846115bc565b60405181906001600160a01b0389169033907f25b173d9e82ea1a8609bb3fae1ed3fad6b1d41eba1ac0d7b9d5e2697d0082a3590600090a45080611300816119bf565b9150506110b7565b508115610dc957610dc93383611500565b60005460ff166113625760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161067a565b6000805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038416600090815260036020908152604080832086845290915281205481906113ed90600160a81b90046001600160401b03168585611622565b905084866001600160a01b0316336001600160a01b03167f2f6844b46ab717fd5c35cb9274efc74c4348d73109e15891c9de7c3e7b16daf18460405161143591815260200190565b60405180910390a495945050505050565b6007546040516331a9108f60e11b8152600481018390526001600160a01b0391821691841690636352211e90602401602060405180830381865afa158015611492573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b69190611a04565b6001600160a01b0316146114fc576001600160a01b03821660009081526003602090815260408083208484529091529020805469ff0000000000000000ff60a01b191690555b5050565b600480546040516340c10f1960e01b81526001600160a01b0385811693820193909352602481018490529116906340c10f1990604401600060405180830381600087803b15801561155057600080fd5b505af1158015610fce573d6000803e3d6000fd5b60005460ff16156115875760405162461bcd60e51b815260040161067a906119da565b6000805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861138f3390565b6040516323b872dd60e01b81526001600160a01b0384811660048301528381166024830152604482018390528516906323b872dd90606401600060405180830381600087803b15801561160e57600080fd5b505af115801561060d573d6000803e3d6000fd5b60008084116116315781611653565b62093a8061163f8542611a58565b6116499190611a6f565b6116539084611a21565b949350505050565b8035801515811461166b57600080fd5b919050565b6000806040838503121561168357600080fd5b823591506116936020840161165b565b90509250929050565b6001600160a01b03811681146116b157600080fd5b50565b6000602082840312156116c657600080fd5b81356116d18161169c565b9392505050565b60008083601f8401126116ea57600080fd5b5081356001600160401b0381111561170157600080fd5b6020830191508360208260051b850101111561171c57600080fd5b9250929050565b600080600080600080600060c0888a03121561173e57600080fd5b87356117498161169c565b965060208801356001600160401b0381111561176457600080fd5b6117708a828b016116d8565b90975095505060408801356117848161169c565b93506117926060890161165b565b9250608088013591506117a760a0890161165b565b905092959891949750929550565b60008060008060008060a087890312156117ce57600080fd5b863595506020870135945060408701356117e78161169c565b935060608701356001600160401b0381111561180257600080fd5b61180e89828a016116d8565b90945092505060808701356118228161169c565b809150509295509295509295565b6000806000806060858703121561184657600080fd5b84356118518161169c565b935060208501356001600160401b0381111561186c57600080fd5b611878878288016116d8565b909450925050604085013561188c8161169c565b939692955090935050565b6000806000604084860312156118ac57600080fd5b83356118b78161169c565b925060208401356001600160401b038111156118d257600080fd5b6118de868287016116d8565b9497909650939450505050565b600080604083850312156118fe57600080fd5b82356119098161169c565b946020939093013593505050565b60008060008060006080868803121561192f57600080fd5b853561193a8161169c565b945060208601356001600160401b0381111561195557600080fd5b611961888289016116d8565b90955093505060408601356119758161169c565b915060608601356119858161169c565b809150509295509295909350565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156119d3576119d36119a9565b5060010190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b600060208284031215611a1657600080fd5b81516116d18161169c565b6000816000190483118215151615611a3b57611a3b6119a9565b500290565b60008219821115611a5357611a536119a9565b500190565b600082821015611a6a57611a6a6119a9565b500390565b600082611a8c57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220a9d404f50d63dbdf39bd2c16e245b762992f244f5059546f340371d183493bf164736f6c634300080a0033";

type OddworxStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OddworxStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OddworxStaking__factory extends ContractFactory {
  constructor(...args: OddworxStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    oddworxAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OddworxStaking> {
    return super.deploy(
      oddworxAddress,
      overrides || {}
    ) as Promise<OddworxStaking>;
  }
  override getDeployTransaction(
    oddworxAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(oddworxAddress, overrides || {});
  }
  override attach(address: string): OddworxStaking {
    return super.attach(address) as OddworxStaking;
  }
  override connect(signer: Signer): OddworxStaking__factory {
    return super.connect(signer) as OddworxStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OddworxStakingInterface {
    return new utils.Interface(_abi) as OddworxStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OddworxStaking {
    return new Contract(address, _abi, signerOrProvider) as OddworxStaking;
  }
}

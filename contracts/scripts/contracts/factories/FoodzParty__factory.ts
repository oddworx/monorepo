/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FoodzParty, FoodzPartyInterface } from "../FoodzParty";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IGoldenPass",
        name: "goldenPass_",
        type: "address",
      },
      {
        internalType: "string",
        name: "baseURI_",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot_",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "payoutAddress_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidClaimAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMerkleProof",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxPerTx",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupply",
    type: "error",
  },
  {
    inputs: [],
    name: "PassSaleOff",
    type: "error",
  },
  {
    inputs: [],
    name: "PresaleOff",
    type: "error",
  },
  {
    inputs: [],
    name: "QueryForNonExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "SaleOff",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongValue",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "GOLDEN_PASS_MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NON_GOLDEN_PASS_MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRESALE_PRICE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SALE_SINGLE_PRICE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SALE_TRIPLE_PRICE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "amountClaimedByUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPassSaleActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPresaleActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isSaleActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintSingle",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintTriple",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonpassSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "passSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "passmint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "mintLimit",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "premint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "rare11Supply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "raremint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newIsPassSaleActive",
        type: "bool",
      },
    ],
    name: "setIsPassSaleActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newIsPresaleActive",
        type: "bool",
      },
    ],
    name: "setIsPresaleActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newIsSaleActive",
        type: "bool",
      },
    ],
    name: "setIsSaleActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040526006805460ff60a01b1916905560016008556009805460ff19908116909155600b805490911690553480156200003957600080fd5b506040516200274b3803806200274b8339810160408190526200005c9162000487565b604080518082018252600b81526a466f6f647a20506172747960a81b602080830191825283518085019094526002845261046560f41b908401528151919291620000a991600091620003a0565b508051620000bf906001906020840190620003a0565b505050620000dc620000d66200013c60201b60201c565b62000140565b6001600160a01b03841660a0528251620000fe90600a906020860190620003a0565b5060808290526001600160a01b03811660c0526200013273067423c244442ca0eb6d6fd6b747c2bd21414107600062000192565b5050505062000608565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6200019e828262000291565b6001600160a01b0382163b1580620002485750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a4016020604051808303816000875af115801562000216573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200023c919062000598565b6001600160e01b031916145b6200028d5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064015b60405180910390fd5b5050565b6001600160a01b038216620002dd5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640162000284565b6000818152600260205260409020546001600160a01b031615620003355760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b604482015260640162000284565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054620003ae90620005cb565b90600052602060002090601f016020900481019282620003d257600085556200041d565b82601f10620003ed57805160ff19168380011785556200041d565b828001600101855582156200041d579182015b828111156200041d57825182559160200191906001019062000400565b506200042b9291506200042f565b5090565b5b808211156200042b576000815560010162000430565b6001600160a01b03811681146200045c57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b8051620004828162000446565b919050565b600080600080608085870312156200049e57600080fd5b8451620004ab8162000446565b602086810151919550906001600160401b0380821115620004cb57600080fd5b818801915088601f830112620004e057600080fd5b815181811115620004f557620004f56200045f565b604051601f8201601f19908116603f011681019083821181831017156200052057620005206200045f565b816040528281528b868487010111156200053957600080fd5b600093505b828410156200055d57848401860151818501870152928501926200053e565b828411156200056f5760008684830101525b809850505050505050604085015191506200058d6060860162000475565b905092959194509250565b600060208284031215620005ab57600080fd5b81516001600160e01b031981168114620005c457600080fd5b9392505050565b600181811c90821680620005e057607f821691505b602082108114156200060257634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c051612113620006386000396000610bb301526000610ef80152600061136c01526121136000f3fe60806040526004361061023b5760003560e01c80636c0360eb1161012e578063b88d4fde116100ab578063d2dedb5d1161006f578063d2dedb5d14610661578063d922d5091461067b578063e0ac4d7d1461068e578063e985e9c5146106aa578063f2fde38b146106e557600080fd5b8063b88d4fde146105dd578063b8f19f18146105fd578063c87b56dd14610605578063d277823c14610625578063d2d65ff51461064157600080fd5b80637e79655c116100f25780637e79655c146105545780638da5cb5b1461056a57806395d89b41146105885780639ebdc3cb1461059d578063a22cb465146105bd57600080fd5b80636c0360eb146104cd57806370a08231146104e2578063715018a614610502578063732fc1f314610517578063771282f61461053757600080fd5b80633b66f49d116101bc57806355f804b31161018057806355f804b314610437578063564566a81461045757806360d938dc1461047157806362dc6e21146104925780636352211e146104ad57600080fd5b80633b66f49d1461039f5780633ccfd60b146103cc57806342842e0e146103e1578063443da2a21461040157806346dab4951461042157600080fd5b8063095ea7b311610203578063095ea7b31461032b5780630be0a2111461034b578063126790921461036157806323b872dd146103695780632def72f41461038957600080fd5b806301ffc9a71461024057806302ff77221461027557806306a1f5791461029757806306fdde03146102bb578063081812fc146102dd575b600080fd5b34801561024c57600080fd5b5061026061025b366004611aa1565b610705565b60405190151581526020015b60405180910390f35b34801561028157600080fd5b50610295610290366004611ace565b610757565b005b3480156102a357600080fd5b506102ad6124eb81565b60405190815260200161026c565b3480156102c757600080fd5b506102d061079d565b60405161026c9190611b15565b3480156102e957600080fd5b506103136102f8366004611b48565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161026c565b34801561033757600080fd5b50610295610346366004611b78565b61082b565b34801561035757600080fd5b506102ad6101f481565b61029561090d565b34801561037557600080fd5b50610295610384366004611ba2565b6109b0565b34801561039557600080fd5b506102ad60085481565b3480156103ab57600080fd5b506102ad6103ba366004611bde565b600d6020526000908152604090205481565b3480156103d857600080fd5b50610295610b77565b3480156103ed57600080fd5b506102956103fc366004611ba2565b610c39565b34801561040d57600080fd5b5061029561041c366004611ace565b610d0e565b34801561042d57600080fd5b506102ad60075481565b34801561044357600080fd5b50610295610452366004611c42565b610d56565b34801561046357600080fd5b506009546102609060ff1681565b34801561047d57600080fd5b5060065461026090600160a01b900460ff1681565b34801561049e57600080fd5b506102ad66f8b0a10e47000081565b3480156104b957600080fd5b506103136104c8366004611b48565b610d8c565b3480156104d957600080fd5b506102d0610de3565b3480156104ee57600080fd5b506102ad6104fd366004611bde565b610df0565b34801561050e57600080fd5b50610295610e53565b34801561052357600080fd5b50610295610532366004611b48565b610e89565b34801561054357600080fd5b50600c5460085460075401016102ad565b34801561056057600080fd5b506102ad600c5481565b34801561057657600080fd5b506006546001600160a01b0316610313565b34801561059457600080fd5b506102d0610f87565b3480156105a957600080fd5b506102956105b8366004611bde565b610f94565b3480156105c957600080fd5b506102956105d8366004611c84565b610ff9565b3480156105e957600080fd5b506102956105f8366004611cb7565b611065565b61029561112a565b34801561061157600080fd5b506102d0610620366004611b48565b6111a3565b34801561063157600080fd5b506102ad67016345785d8a000081565b34801561064d57600080fd5b5061029561065c366004611ace565b61120d565b34801561066d57600080fd5b50600b546102609060ff1681565b610295610689366004611d26565b61124a565b34801561069a57600080fd5b506102ad670354a6ba7a18000081565b3480156106b657600080fd5b506102606106c5366004611da9565b600560209081526000928352604080842090915290825290205460ff1681565b3480156106f157600080fd5b50610295610700366004611bde565b6113fe565b60006301ffc9a760e01b6001600160e01b03198316148061073657506380ac58cd60e01b6001600160e01b03198316145b806107515750635b5e139f60e01b6001600160e01b03198316145b92915050565b6006546001600160a01b0316331461078a5760405162461bcd60e51b815260040161078190611dd3565b60405180910390fd5b600b805460ff1916911515919091179055565b600080546107aa90611e08565b80601f01602080910402602001604051908101604052809291908181526020018280546107d690611e08565b80156108235780601f106107f857610100808354040283529160200191610823565b820191906000526020600020905b81548152906001019060200180831161080657829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b03163381148061087457506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6108b15760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610781565b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60095460ff1661093057604051633afc8ce960e01b815260040160405180910390fd5b670354a6ba7a180000341461095857604051632635240760e21b815260040160405180910390fd5b60088054600301908190556124eb81111561098657604051632cdb04a160e21b815260040160405180910390fd5b6109933360038303611496565b6109a03360028303611496565b6109ad3360018303611496565b50565b6000818152600260205260409020546001600160a01b03848116911614610a065760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610781565b6001600160a01b038216610a505760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610781565b336001600160a01b0384161480610a8a57506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b80610aab57506000818152600460205260409020546001600160a01b031633145b610ae85760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610781565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b03163314610ba15760405162461bcd60e51b815260040161078190611dd3565b60405147906000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169083908381818185875af1925050503d8060008114610c0e576040519150601f19603f3d011682016040523d82523d6000602084013e610c13565b606091505b5050905080610c3557604051631d42c86760e21b815260040160405180910390fd5b5050565b610c448383836109b0565b6001600160a01b0382163b1580610ced5750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015610cbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce19190611e43565b6001600160e01b031916145b610d095760405162461bcd60e51b815260040161078190611e60565b505050565b6006546001600160a01b03163314610d385760405162461bcd60e51b815260040161078190611dd3565b60068054911515600160a01b0260ff60a01b19909216919091179055565b6006546001600160a01b03163314610d805760405162461bcd60e51b815260040161078190611dd3565b610d09600a83836119f2565b6000818152600260205260409020546001600160a01b031680610dde5760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606401610781565b919050565b600a80546107aa90611e08565b60006001600160a01b038216610e375760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b6044820152606401610781565b506001600160a01b031660009081526003602052604090205490565b6006546001600160a01b03163314610e7d5760405162461bcd60e51b815260040161078190611dd3565b610e876000611562565b565b600b5460ff16610eac5760405163b996855160e01b815260040160405180910390fd5b6007546101f48282011115610ed457604051632cdb04a160e21b815260040160405180910390fd5b6007805483019055604051632770a7eb60e21b8152336004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690639dc29fac90604401600060405180830381600087803b158015610f4457600080fd5b505af1158015610f58573d6000803e3d6000fd5b5050506124eb8201905060005b83811015610f8157610f7933828401611496565b600101610f65565b50505050565b600180546107aa90611e08565b6006546001600160a01b03163314610fbe5760405162461bcd60e51b815260040161078190611dd3565b600c8054600101908190556032811115610feb57604051632cdb04a160e21b815260040160405180910390fd5b610c35826126de8301611496565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6110708585856109b0565b6001600160a01b0384163b15806111075750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a02906110b89033908a90899089908990600401611e8a565b6020604051808303816000875af11580156110d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110fb9190611e43565b6001600160e01b031916145b6111235760405162461bcd60e51b815260040161078190611e60565b5050505050565b60095460ff1661114d57604051633afc8ce960e01b815260040160405180910390fd5b60088054600101908190553467016345785d8a00001461118057604051632635240760e21b815260040160405180910390fd5b6124eb8111156109a057604051632cdb04a160e21b815260040160405180910390fd5b6000818152600260205260409020546060906001600160a01b03166111db576040516302d4aa9360e61b815260040160405180910390fd5b600a6111e6836115b4565b6040516020016111f7929190611efa565b6040516020818303038152906040529050919050565b6006546001600160a01b031633146112375760405162461bcd60e51b815260040161078190611dd3565b6009805460ff1916911515919091179055565b600654600160a01b900460ff1661127457604051630a6802b560e41b815260040160405180910390fd5b336000908152600d602052604090205484018310156112a65760405163843ce46b60e01b815260040160405180910390fd5b8366f8b0a10e4700000234146112cf57604051632635240760e21b815260040160405180910390fd5b6124eb846008540111156112f657604051632cdb04a160e21b815260040160405180910390fd5b60006113033360146116ba565b61130c856115b4565b60405160200161131d929190611fa1565b60405160208183030381529060405280519060200120905060006113978484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f0000000000000000000000000000000000000000000000000000000000000000925086915061185d9050565b9050806113b75760405163582f497d60e11b815260040160405180910390fd5b336000908152600d6020526040812080548801905560088054808901909155905b878110156113f4576113ec33828401611496565b6001016113d8565b5050505050505050565b6006546001600160a01b031633146114285760405162461bcd60e51b815260040161078190611dd3565b6001600160a01b03811661148d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610781565b6109ad81611562565b6114a08282611873565b6001600160a01b0382163b15806115465750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a4016020604051808303816000875af1158015611516573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153a9190611e43565b6001600160e01b031916145b610c355760405162461bcd60e51b815260040161078190611e60565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6060816115d85750506040805180820190915260018152600360fc1b602082015290565b8160005b811561160257806115ec81611ff3565b91506115fb9050600a83612024565b91506115dc565b60008167ffffffffffffffff81111561161d5761161d612038565b6040519080825280601f01601f191660200182016040528015611647576020820181803683370190505b5090505b84156116b25761165c60018361204e565b9150611669600a86612065565b611674906030612079565b60f81b81838151811061168957611689612091565b60200101906001600160f81b031916908160001a9053506116ab600a86612024565b945061164b565b949350505050565b606060006116c98360026120a7565b6116d4906002612079565b67ffffffffffffffff8111156116ec576116ec612038565b6040519080825280601f01601f191660200182016040528015611716576020820181803683370190505b509050600360fc1b8160008151811061173157611731612091565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061176057611760612091565b60200101906001600160f81b031916908160001a90535060006117848460026120a7565b61178f906001612079565b90505b6001811115611807576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106117c3576117c3612091565b1a60f81b8282815181106117d9576117d9612091565b60200101906001600160f81b031916908160001a90535060049490941c93611800816120c6565b9050611792565b5083156118565760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610781565b9392505050565b60008261186a858461197e565b14949350505050565b6001600160a01b0382166118bd5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610781565b6000818152600260205260409020546001600160a01b0316156119135760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b6044820152606401610781565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600081815b84518110156119ea5760008582815181106119a0576119a0612091565b602002602001015190508083116119c657600083815260208290526040902092506119d7565b600081815260208490526040902092505b50806119e281611ff3565b915050611983565b509392505050565b8280546119fe90611e08565b90600052602060002090601f016020900481019282611a205760008555611a66565b82601f10611a395782800160ff19823516178555611a66565b82800160010185558215611a66579182015b82811115611a66578235825591602001919060010190611a4b565b50611a72929150611a76565b5090565b5b80821115611a725760008155600101611a77565b6001600160e01b0319811681146109ad57600080fd5b600060208284031215611ab357600080fd5b813561185681611a8b565b80358015158114610dde57600080fd5b600060208284031215611ae057600080fd5b61185682611abe565b60005b83811015611b04578181015183820152602001611aec565b83811115610f815750506000910152565b6020815260008251806020840152611b34816040850160208701611ae9565b601f01601f19169190910160400192915050565b600060208284031215611b5a57600080fd5b5035919050565b80356001600160a01b0381168114610dde57600080fd5b60008060408385031215611b8b57600080fd5b611b9483611b61565b946020939093013593505050565b600080600060608486031215611bb757600080fd5b611bc084611b61565b9250611bce60208501611b61565b9150604084013590509250925092565b600060208284031215611bf057600080fd5b61185682611b61565b60008083601f840112611c0b57600080fd5b50813567ffffffffffffffff811115611c2357600080fd5b602083019150836020828501011115611c3b57600080fd5b9250929050565b60008060208385031215611c5557600080fd5b823567ffffffffffffffff811115611c6c57600080fd5b611c7885828601611bf9565b90969095509350505050565b60008060408385031215611c9757600080fd5b611ca083611b61565b9150611cae60208401611abe565b90509250929050565b600080600080600060808688031215611ccf57600080fd5b611cd886611b61565b9450611ce660208701611b61565b935060408601359250606086013567ffffffffffffffff811115611d0957600080fd5b611d1588828901611bf9565b969995985093965092949392505050565b60008060008060608587031215611d3c57600080fd5b8435935060208501359250604085013567ffffffffffffffff80821115611d6257600080fd5b818701915087601f830112611d7657600080fd5b813581811115611d8557600080fd5b8860208260051b8501011115611d9a57600080fd5b95989497505060200194505050565b60008060408385031215611dbc57600080fd5b611dc583611b61565b9150611cae60208401611b61565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c90821680611e1c57607f821691505b60208210811415611e3d57634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215611e5557600080fd5b815161185681611a8b565b60208082526010908201526f155394d0519157d49150d2541251539560821b604082015260600190565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b60008151611ef0818560208601611ae9565b9290920192915050565b600080845481600182811c915080831680611f1657607f831692505b6020808410821415611f3657634e487b7160e01b86526022600452602486fd5b818015611f4a5760018114611f5b57611f88565b60ff19861689528489019650611f88565b60008b81526020902060005b86811015611f805781548b820152908501908301611f67565b505084890196505b505050505050611f988185611ede565b95945050505050565b60008351611fb3818460208801611ae9565b601d60f91b9083019081528351611fd1816001840160208801611ae9565b01600101949350505050565b634e487b7160e01b600052601160045260246000fd5b600060001982141561200757612007611fdd565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826120335761203361200e565b500490565b634e487b7160e01b600052604160045260246000fd5b60008282101561206057612060611fdd565b500390565b6000826120745761207461200e565b500690565b6000821982111561208c5761208c611fdd565b500190565b634e487b7160e01b600052603260045260246000fd5b60008160001904831182151516156120c1576120c1611fdd565b500290565b6000816120d5576120d5611fdd565b50600019019056fea26469706673582212201112924866ccbf87b85793cdc17406693fb290b6f559b620ae2e49ddb41d586764736f6c634300080a0033";

type FoodzPartyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FoodzPartyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FoodzParty__factory extends ContractFactory {
  constructor(...args: FoodzPartyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    goldenPass_: string,
    baseURI_: string,
    merkleRoot_: BytesLike,
    payoutAddress_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FoodzParty> {
    return super.deploy(
      goldenPass_,
      baseURI_,
      merkleRoot_,
      payoutAddress_,
      overrides || {}
    ) as Promise<FoodzParty>;
  }
  override getDeployTransaction(
    goldenPass_: string,
    baseURI_: string,
    merkleRoot_: BytesLike,
    payoutAddress_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      goldenPass_,
      baseURI_,
      merkleRoot_,
      payoutAddress_,
      overrides || {}
    );
  }
  override attach(address: string): FoodzParty {
    return super.attach(address) as FoodzParty;
  }
  override connect(signer: Signer): FoodzParty__factory {
    return super.connect(signer) as FoodzParty__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FoodzPartyInterface {
    return new utils.Interface(_abi) as FoodzPartyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FoodzParty {
    return new Contract(address, _abi, signerOrProvider) as FoodzParty;
  }
}
